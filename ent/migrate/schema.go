// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// DiscountOffersColumns holds the columns for the "discount_offers" table.
	DiscountOffersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "amount", Type: field.TypeInt},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"FIXED_AMOUNT", "PERCENT_FROM_PRICE"}, Default: "PERCENT_FROM_PRICE"},
		{Name: "currency", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString},
		{Name: "merchant_specific_identification", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "expires_at", Type: field.TypeTime},
		{Name: "merchant_discount_offers", Type: field.TypeInt},
		{Name: "notification_notification_discount_offer", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// DiscountOffersTable holds the schema information for the "discount_offers" table.
	DiscountOffersTable = &schema.Table{
		Name:       "discount_offers",
		Columns:    DiscountOffersColumns,
		PrimaryKey: []*schema.Column{DiscountOffersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "discount_offers_merchants_discount_offers",
				Columns:    []*schema.Column{DiscountOffersColumns[8]},
				RefColumns: []*schema.Column{MerchantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "discount_offers_notifications_notification_discount_offer",
				Columns:    []*schema.Column{DiscountOffersColumns[9]},
				RefColumns: []*schema.Column{NotificationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// MerchantsColumns holds the columns for the "merchants" table.
	MerchantsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// MerchantsTable holds the schema information for the "merchants" table.
	MerchantsTable = &schema.Table{
		Name:       "merchants",
		Columns:    MerchantsColumns,
		PrimaryKey: []*schema.Column{MerchantsColumns[0]},
	}
	// NotificationsColumns holds the columns for the "notifications" table.
	NotificationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "checked_in_app", Type: field.TypeBool, Default: false},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"OFFER", "INSIGHTS"}, Default: "INSIGHTS"},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "included_in_aggregated_offer_at", Type: field.TypeTime, Nullable: true},
		{Name: "user_notifications", Type: field.TypeInt},
	}
	// NotificationsTable holds the schema information for the "notifications" table.
	NotificationsTable = &schema.Table{
		Name:       "notifications",
		Columns:    NotificationsColumns,
		PrimaryKey: []*schema.Column{NotificationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "notifications_users_notifications",
				Columns:    []*schema.Column{NotificationsColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// PlaidInstitutionsColumns holds the columns for the "plaid_institutions" table.
	PlaidInstitutionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "institution_id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "plaid_item_institution", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// PlaidInstitutionsTable holds the schema information for the "plaid_institutions" table.
	PlaidInstitutionsTable = &schema.Table{
		Name:       "plaid_institutions",
		Columns:    PlaidInstitutionsColumns,
		PrimaryKey: []*schema.Column{PlaidInstitutionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "plaid_institutions_plaid_items_institution",
				Columns:    []*schema.Column{PlaidInstitutionsColumns[3]},
				RefColumns: []*schema.Column{PlaidItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PlaidInstitutionAccountsColumns holds the columns for the "plaid_institution_accounts" table.
	PlaidInstitutionAccountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "account_id", Type: field.TypeString},
		{Name: "balance_available", Type: field.TypeFloat64},
		{Name: "balance_current", Type: field.TypeFloat64},
		{Name: "balance_iso_currency_code", Type: field.TypeString},
		{Name: "mask", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "official_name", Type: field.TypeString, Nullable: true},
		{Name: "type", Type: field.TypeString},
		{Name: "plaid_institution_accounts", Type: field.TypeInt, Nullable: true},
	}
	// PlaidInstitutionAccountsTable holds the schema information for the "plaid_institution_accounts" table.
	PlaidInstitutionAccountsTable = &schema.Table{
		Name:       "plaid_institution_accounts",
		Columns:    PlaidInstitutionAccountsColumns,
		PrimaryKey: []*schema.Column{PlaidInstitutionAccountsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "plaid_institution_accounts_plaid_institutions_accounts",
				Columns:    []*schema.Column{PlaidInstitutionAccountsColumns[9]},
				RefColumns: []*schema.Column{PlaidInstitutionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PlaidItemsColumns holds the columns for the "plaid_items" table.
	PlaidItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "item_id", Type: field.TypeString},
		{Name: "access_token", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_plaid_items", Type: field.TypeInt, Nullable: true},
	}
	// PlaidItemsTable holds the schema information for the "plaid_items" table.
	PlaidItemsTable = &schema.Table{
		Name:       "plaid_items",
		Columns:    PlaidItemsColumns,
		PrimaryKey: []*schema.Column{PlaidItemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "plaid_items_users_plaid_items",
				Columns:    []*schema.Column{PlaidItemsColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SpendingCategoriesColumns holds the columns for the "spending_categories" table.
	SpendingCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "category_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
	}
	// SpendingCategoriesTable holds the schema information for the "spending_categories" table.
	SpendingCategoriesTable = &schema.Table{
		Name:       "spending_categories",
		Columns:    SpendingCategoriesColumns,
		PrimaryKey: []*schema.Column{SpendingCategoriesColumns[0]},
	}
	// TransactionsColumns holds the columns for the "transactions" table.
	TransactionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "financial_account_id", Type: field.TypeString},
		{Name: "amount", Type: field.TypeFloat64},
		{Name: "iso_currency_code", Type: field.TypeString},
		{Name: "unofficial_currency_code", Type: field.TypeString},
		{Name: "category", Type: field.TypeString, Nullable: true},
		{Name: "category_id", Type: field.TypeString, Nullable: true},
		{Name: "check_number", Type: field.TypeString},
		{Name: "date", Type: field.TypeString},
		{Name: "datetime", Type: field.TypeTime, Nullable: true},
		{Name: "authorized_date", Type: field.TypeString, Nullable: true},
		{Name: "authorized_datetime", Type: field.TypeTime, Nullable: true},
		{Name: "location_address", Type: field.TypeString},
		{Name: "location_city", Type: field.TypeString},
		{Name: "location_region", Type: field.TypeString},
		{Name: "location_postal_code", Type: field.TypeString},
		{Name: "location_lat", Type: field.TypeFloat64},
		{Name: "location_lon", Type: field.TypeFloat64},
		{Name: "location_store_number", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "merchant_name", Type: field.TypeString},
		{Name: "payment_channel", Type: field.TypeString},
		{Name: "pending", Type: field.TypeBool},
		{Name: "pending_transaction_id", Type: field.TypeString},
		{Name: "account_owner", Type: field.TypeString},
		{Name: "transaction_id", Type: field.TypeString},
		{Name: "transaction_code", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "plaid_institution_account_transactions", Type: field.TypeInt, Nullable: true},
	}
	// TransactionsTable holds the schema information for the "transactions" table.
	TransactionsTable = &schema.Table{
		Name:       "transactions",
		Columns:    TransactionsColumns,
		PrimaryKey: []*schema.Column{TransactionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "transactions_plaid_institution_accounts_transactions",
				Columns:    []*schema.Column{TransactionsColumns[28]},
				RefColumns: []*schema.Column{PlaidInstitutionAccountsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TransactionSyncsColumns holds the columns for the "transaction_syncs" table.
	TransactionSyncsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "cursor", Type: field.TypeString},
		{Name: "plaid_item_transaction_syncs", Type: field.TypeInt, Nullable: true},
	}
	// TransactionSyncsTable holds the schema information for the "transaction_syncs" table.
	TransactionSyncsTable = &schema.Table{
		Name:       "transaction_syncs",
		Columns:    TransactionSyncsColumns,
		PrimaryKey: []*schema.Column{TransactionSyncsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "transaction_syncs_plaid_items_transaction_syncs",
				Columns:    []*schema.Column{TransactionSyncsColumns[3]},
				RefColumns: []*schema.Column{PlaidItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "identity_provider_id", Type: field.TypeString, Nullable: true},
		{Name: "offer_frequency", Type: field.TypeEnum, Enums: []string{"NO_OFFERS", "ASS_SOON_AS_POSSIBLE", "DAILY", "WEEKLY", "BI_WEEKLY", "MONTHLY"}, Default: "NO_OFFERS"},
		{Name: "home_country", Type: field.TypeString, Nullable: true},
		{Name: "home_state", Type: field.TypeString, Nullable: true},
		{Name: "home_city", Type: field.TypeString, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UserNotificationChannelPreferencesColumns holds the columns for the "user_notification_channel_preferences" table.
	UserNotificationChannelPreferencesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "chanel", Type: field.TypeEnum, Enums: []string{"EMAIL", "SMS", "PUSH"}},
		{Name: "user_notification_channels", Type: field.TypeInt, Nullable: true},
	}
	// UserNotificationChannelPreferencesTable holds the schema information for the "user_notification_channel_preferences" table.
	UserNotificationChannelPreferencesTable = &schema.Table{
		Name:       "user_notification_channel_preferences",
		Columns:    UserNotificationChannelPreferencesColumns,
		PrimaryKey: []*schema.Column{UserNotificationChannelPreferencesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_notification_channel_preferences_users_notification_channels",
				Columns:    []*schema.Column{UserNotificationChannelPreferencesColumns[2]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TransactionTransactionCategoriesColumns holds the columns for the "transaction_transaction_categories" table.
	TransactionTransactionCategoriesColumns = []*schema.Column{
		{Name: "transaction_id", Type: field.TypeInt},
		{Name: "spending_category_id", Type: field.TypeInt},
	}
	// TransactionTransactionCategoriesTable holds the schema information for the "transaction_transaction_categories" table.
	TransactionTransactionCategoriesTable = &schema.Table{
		Name:       "transaction_transaction_categories",
		Columns:    TransactionTransactionCategoriesColumns,
		PrimaryKey: []*schema.Column{TransactionTransactionCategoriesColumns[0], TransactionTransactionCategoriesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "transaction_transaction_categories_transaction_id",
				Columns:    []*schema.Column{TransactionTransactionCategoriesColumns[0]},
				RefColumns: []*schema.Column{TransactionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "transaction_transaction_categories_spending_category_id",
				Columns:    []*schema.Column{TransactionTransactionCategoriesColumns[1]},
				RefColumns: []*schema.Column{SpendingCategoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserSpendingCategoriesColumns holds the columns for the "user_spending_categories" table.
	UserSpendingCategoriesColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "spending_category_id", Type: field.TypeInt},
	}
	// UserSpendingCategoriesTable holds the schema information for the "user_spending_categories" table.
	UserSpendingCategoriesTable = &schema.Table{
		Name:       "user_spending_categories",
		Columns:    UserSpendingCategoriesColumns,
		PrimaryKey: []*schema.Column{UserSpendingCategoriesColumns[0], UserSpendingCategoriesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_spending_categories_user_id",
				Columns:    []*schema.Column{UserSpendingCategoriesColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_spending_categories_spending_category_id",
				Columns:    []*schema.Column{UserSpendingCategoriesColumns[1]},
				RefColumns: []*schema.Column{SpendingCategoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserAvailableDiscountOffersColumns holds the columns for the "user_available_discount_offers" table.
	UserAvailableDiscountOffersColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "discount_offer_id", Type: field.TypeInt},
	}
	// UserAvailableDiscountOffersTable holds the schema information for the "user_available_discount_offers" table.
	UserAvailableDiscountOffersTable = &schema.Table{
		Name:       "user_available_discount_offers",
		Columns:    UserAvailableDiscountOffersColumns,
		PrimaryKey: []*schema.Column{UserAvailableDiscountOffersColumns[0], UserAvailableDiscountOffersColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_available_discount_offers_user_id",
				Columns:    []*schema.Column{UserAvailableDiscountOffersColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_available_discount_offers_discount_offer_id",
				Columns:    []*schema.Column{UserAvailableDiscountOffersColumns[1]},
				RefColumns: []*schema.Column{DiscountOffersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		DiscountOffersTable,
		MerchantsTable,
		NotificationsTable,
		PlaidInstitutionsTable,
		PlaidInstitutionAccountsTable,
		PlaidItemsTable,
		SpendingCategoriesTable,
		TransactionsTable,
		TransactionSyncsTable,
		UsersTable,
		UserNotificationChannelPreferencesTable,
		TransactionTransactionCategoriesTable,
		UserSpendingCategoriesTable,
		UserAvailableDiscountOffersTable,
	}
)

func init() {
	DiscountOffersTable.ForeignKeys[0].RefTable = MerchantsTable
	DiscountOffersTable.ForeignKeys[1].RefTable = NotificationsTable
	NotificationsTable.ForeignKeys[0].RefTable = UsersTable
	PlaidInstitutionsTable.ForeignKeys[0].RefTable = PlaidItemsTable
	PlaidInstitutionAccountsTable.ForeignKeys[0].RefTable = PlaidInstitutionsTable
	PlaidItemsTable.ForeignKeys[0].RefTable = UsersTable
	TransactionsTable.ForeignKeys[0].RefTable = PlaidInstitutionAccountsTable
	TransactionSyncsTable.ForeignKeys[0].RefTable = PlaidItemsTable
	UserNotificationChannelPreferencesTable.ForeignKeys[0].RefTable = UsersTable
	TransactionTransactionCategoriesTable.ForeignKeys[0].RefTable = TransactionsTable
	TransactionTransactionCategoriesTable.ForeignKeys[1].RefTable = SpendingCategoriesTable
	UserSpendingCategoriesTable.ForeignKeys[0].RefTable = UsersTable
	UserSpendingCategoriesTable.ForeignKeys[1].RefTable = SpendingCategoriesTable
	UserAvailableDiscountOffersTable.ForeignKeys[0].RefTable = UsersTable
	UserAvailableDiscountOffersTable.ForeignKeys[1].RefTable = DiscountOffersTable
}
