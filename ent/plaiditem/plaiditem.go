// Code generated by ent, DO NOT EDIT.

package plaiditem

import (
	"time"
)

const (
	// Label holds the string label denoting the plaiditem type in the database.
	Label = "plaid_item"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldItemID holds the string denoting the item_id field in the database.
	FieldItemID = "item_id"
	// FieldAccessToken holds the string denoting the access_token field in the database.
	FieldAccessToken = "access_token"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// EdgeOwner holds the string denoting the owner edge name in mutations.
	EdgeOwner = "owner"
	// EdgeTransactionSyncs holds the string denoting the transaction_syncs edge name in mutations.
	EdgeTransactionSyncs = "transaction_syncs"
	// EdgeInstitution holds the string denoting the institution edge name in mutations.
	EdgeInstitution = "institution"
	// Table holds the table name of the plaiditem in the database.
	Table = "plaid_items"
	// OwnerTable is the table that holds the owner relation/edge.
	OwnerTable = "plaid_items"
	// OwnerInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	OwnerInverseTable = "users"
	// OwnerColumn is the table column denoting the owner relation/edge.
	OwnerColumn = "user_plaid_items"
	// TransactionSyncsTable is the table that holds the transaction_syncs relation/edge.
	TransactionSyncsTable = "transaction_syncs"
	// TransactionSyncsInverseTable is the table name for the TransactionSync entity.
	// It exists in this package in order to avoid circular dependency with the "transactionsync" package.
	TransactionSyncsInverseTable = "transaction_syncs"
	// TransactionSyncsColumn is the table column denoting the transaction_syncs relation/edge.
	TransactionSyncsColumn = "plaid_item_transaction_syncs"
	// InstitutionTable is the table that holds the institution relation/edge.
	InstitutionTable = "plaid_institutions"
	// InstitutionInverseTable is the table name for the PlaidInstitution entity.
	// It exists in this package in order to avoid circular dependency with the "plaidinstitution" package.
	InstitutionInverseTable = "plaid_institutions"
	// InstitutionColumn is the table column denoting the institution relation/edge.
	InstitutionColumn = "plaid_item_institution"
)

// Columns holds all SQL columns for plaiditem fields.
var Columns = []string{
	FieldID,
	FieldItemID,
	FieldAccessToken,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "plaid_items"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"user_plaid_items",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// ItemIDValidator is a validator for the "item_id" field. It is called by the builders before save.
	ItemIDValidator func(string) error
	// AccessTokenValidator is a validator for the "access_token" field. It is called by the builders before save.
	AccessTokenValidator func(string) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
)
