package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.24

// ExchangeAuthTokenForUserProfile is the resolver for the exchangeAuthTokenForUserProfile field.
//func (r *mutationResolver) ExchangeAuthTokenForUserProfile(ctx context.Context, input ent.CreateUserInput) (*ent.User, error) {
//	//return nil, errors.New("Test error")
//
//	return r.userService.GetOrCreateProfileWithIdentityProviderId(ctx, input.IdentityProviderID)
//}

//// CreateLinkToken is the resolver for the createLinkToken field.
//func (r *mutationResolver) CreateLinkToken(ctx context.Context, input model.CreateLinkTokenParams) (*model.LinkTokenHost, error) {
//	token, err := r.plaid.CreateLinkToken(input.UserID)
//
//	tokenHost := &model.LinkTokenHost{
//		LinkToken: token,
//	}
//
//	return tokenHost, err
//}
//
//// ExchangePublicToken is the resolver for the exchangePublicToken field.
//func (r *mutationResolver) ExchangePublicToken(ctx context.Context, input model.ExchangePublicTokenParams) (string, error) {
//	res, err := r.plaid.ExchangePublicTokenIntoAccessToken(ctx, input.PublicToken)
//	if err != nil {
//		return "", err
//	}
//
//	err = r.userService.SaveItemAccessToken(ctx, input.UserID, res.GetItemId(), res.GetAccessToken())
//	if err != nil {
//		return "", err
//	}
//
//	return "OK", nil
//}

// Mutation returns MutationResolver implementation.
//func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

//type mutationResolver struct{ *Resolver }
