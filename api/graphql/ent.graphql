directive @goField(forceResolver: Boolean, name: String) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!]) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
"""
CreateDiscountOfferInput is used for create DiscountOffer object.
Input was generated by ent.
"""
input CreateDiscountOfferInput {
  amount: Int!
  type: DiscountOfferType
  currency: String
  description: String!
  merchantSpecificIdentification: String!
  expiresAt: Time!
  ownerMerchantID: ID!
  discountEligibleUserIDs: [ID!]!
  discountOfferNotificationID: ID
}
"""
CreateMerchantInput is used for create Merchant object.
Input was generated by ent.
"""
input CreateMerchantInput {
  name: String!
  discountOfferIDs: [ID!]
}
"""
CreateUserInput is used for create User object.
Input was generated by ent.
"""
input CreateUserInput {
  identityProviderID: String
  offerFrequency: UserOfferFrequency
  homeCountry: String
  homeState: String
  homeCity: String
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
type DiscountOffer implements Node {
  id: ID!
  amount: Int!
  type: DiscountOfferType!
  currency: String
  description: String!
  merchantSpecificIdentification: String!
  createdAt: Time!
  expiresAt: Time!
  ownerMerchant: Merchant!
  discountEligibleUsers: [User!]!
  discountOfferNotification: Notification
}
"""A connection to a list of items."""
type DiscountOfferConnection {
  """A list of edges."""
  edges: [DiscountOfferEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type DiscountOfferEdge {
  """The item at the end of the edge."""
  node: DiscountOffer
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for DiscountOffer connections"""
input DiscountOfferOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order DiscountOffers."""
  field: DiscountOfferOrderField!
}
"""Properties by which DiscountOffer connections can be ordered."""
enum DiscountOfferOrderField {
  CREATED_AT
}
"""DiscountOfferType is enum for the field type"""
enum DiscountOfferType @goModel(model: "wallit/ent/discountoffer.Type") {
  FIXED_AMOUNT
  PERCENT_FROM_PRICE
}
"""
DiscountOfferWhereInput is used for filtering DiscountOffer objects.
Input was generated by ent.
"""
input DiscountOfferWhereInput {
  not: DiscountOfferWhereInput
  and: [DiscountOfferWhereInput!]
  or: [DiscountOfferWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """amount field predicates"""
  amount: Int
  amountNEQ: Int
  amountIn: [Int!]
  amountNotIn: [Int!]
  amountGT: Int
  amountGTE: Int
  amountLT: Int
  amountLTE: Int
  """type field predicates"""
  type: DiscountOfferType
  typeNEQ: DiscountOfferType
  typeIn: [DiscountOfferType!]
  typeNotIn: [DiscountOfferType!]
  """currency field predicates"""
  currency: String
  currencyNEQ: String
  currencyIn: [String!]
  currencyNotIn: [String!]
  currencyGT: String
  currencyGTE: String
  currencyLT: String
  currencyLTE: String
  currencyContains: String
  currencyHasPrefix: String
  currencyHasSuffix: String
  currencyIsNil: Boolean
  currencyNotNil: Boolean
  currencyEqualFold: String
  currencyContainsFold: String
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionEqualFold: String
  descriptionContainsFold: String
  """merchant_specific_identification field predicates"""
  merchantSpecificIdentification: String
  merchantSpecificIdentificationNEQ: String
  merchantSpecificIdentificationIn: [String!]
  merchantSpecificIdentificationNotIn: [String!]
  merchantSpecificIdentificationGT: String
  merchantSpecificIdentificationGTE: String
  merchantSpecificIdentificationLT: String
  merchantSpecificIdentificationLTE: String
  merchantSpecificIdentificationContains: String
  merchantSpecificIdentificationHasPrefix: String
  merchantSpecificIdentificationHasSuffix: String
  merchantSpecificIdentificationEqualFold: String
  merchantSpecificIdentificationContainsFold: String
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """expires_at field predicates"""
  expiresAt: Time
  expiresAtNEQ: Time
  expiresAtIn: [Time!]
  expiresAtNotIn: [Time!]
  expiresAtGT: Time
  expiresAtGTE: Time
  expiresAtLT: Time
  expiresAtLTE: Time
  """owner_merchant edge predicates"""
  hasOwnerMerchant: Boolean
  hasOwnerMerchantWith: [MerchantWhereInput!]
  """discount_eligible_users edge predicates"""
  hasDiscountEligibleUsers: Boolean
  hasDiscountEligibleUsersWith: [UserWhereInput!]
  """discount_offer_notification edge predicates"""
  hasDiscountOfferNotification: Boolean
  hasDiscountOfferNotificationWith: [NotificationWhereInput!]
}
type Merchant implements Node {
  id: ID!
  name: String!
  discountOffers: [DiscountOffer!]
}
"""
MerchantWhereInput is used for filtering Merchant objects.
Input was generated by ent.
"""
input MerchantWhereInput {
  not: MerchantWhereInput
  and: [MerchantWhereInput!]
  or: [MerchantWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """discount_offers edge predicates"""
  hasDiscountOffers: Boolean
  hasDiscountOffersWith: [DiscountOfferWhereInput!]
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "wallit/ent.Noder") {
  """The id of the object."""
  id: ID!
}
type Notification implements Node {
  id: ID!
  checkedInApp: Boolean!
  type: NotificationType!
  createdAt: Time!
  includedInAggregatedOfferAt: Time
  notificationRecipient: User!
  notificationDiscountOffer: DiscountOffer
}
"""A connection to a list of items."""
type NotificationConnection {
  """A list of edges."""
  edges: [NotificationEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type NotificationEdge {
  """The item at the end of the edge."""
  node: Notification
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for Notification connections"""
input NotificationOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Notifications."""
  field: NotificationOrderField!
}
"""Properties by which Notification connections can be ordered."""
enum NotificationOrderField {
  CREATED_AT
}
"""NotificationType is enum for the field type"""
enum NotificationType @goModel(model: "wallit/ent/notification.Type") {
  OFFER
  INSIGHTS
}
"""
NotificationWhereInput is used for filtering Notification objects.
Input was generated by ent.
"""
input NotificationWhereInput {
  not: NotificationWhereInput
  and: [NotificationWhereInput!]
  or: [NotificationWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """checked_in_app field predicates"""
  checkedInApp: Boolean
  checkedInAppNEQ: Boolean
  """type field predicates"""
  type: NotificationType
  typeNEQ: NotificationType
  typeIn: [NotificationType!]
  typeNotIn: [NotificationType!]
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """included_in_aggregated_offer_at field predicates"""
  includedInAggregatedOfferAt: Time
  includedInAggregatedOfferAtNEQ: Time
  includedInAggregatedOfferAtIn: [Time!]
  includedInAggregatedOfferAtNotIn: [Time!]
  includedInAggregatedOfferAtGT: Time
  includedInAggregatedOfferAtGTE: Time
  includedInAggregatedOfferAtLT: Time
  includedInAggregatedOfferAtLTE: Time
  includedInAggregatedOfferAtIsNil: Boolean
  includedInAggregatedOfferAtNotNil: Boolean
  """notification_recipient edge predicates"""
  hasNotificationRecipient: Boolean
  hasNotificationRecipientWith: [UserWhereInput!]
  """notification_discount_offer edge predicates"""
  hasNotificationDiscountOffer: Boolean
  hasNotificationDiscountOfferWith: [DiscountOfferWhereInput!]
}
"""Possible directions in which to order a list of items when provided an `orderBy` argument."""
enum OrderDirection {
  """Specifies an ascending order for a given `orderBy` argument."""
  ASC
  """Specifies a descending order for a given `orderBy` argument."""
  DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!
  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!
  """When paginating backwards, the cursor to continue."""
  startCursor: Cursor
  """When paginating forwards, the cursor to continue."""
  endCursor: Cursor
}
type PlaidInstitution implements Node {
  id: ID!
  institutionID: String!
  name: String!
  plaidItem: PlaidItem
  accounts: [PlaidInstitutionAccount!]
}
type PlaidInstitutionAccount implements Node {
  id: ID!
  accountID: String!
  balanceAvailable: Float!
  balanceCurrent: Float!
  balanceIsoCurrencyCode: String!
  mask: String!
  name: String!
  officialName: String
  type: String!
  parentInstitution: PlaidInstitution
  transactions(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Ordering options for Transactions returned from the connection."""
    orderBy: TransactionOrder

    """Filtering options for Transactions returned from the connection."""
    where: TransactionWhereInput
  ): TransactionConnection!
}
"""A connection to a list of items."""
type PlaidInstitutionAccountConnection {
  """A list of edges."""
  edges: [PlaidInstitutionAccountEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type PlaidInstitutionAccountEdge {
  """The item at the end of the edge."""
  node: PlaidInstitutionAccount
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""
PlaidInstitutionAccountWhereInput is used for filtering PlaidInstitutionAccount objects.
Input was generated by ent.
"""
input PlaidInstitutionAccountWhereInput {
  not: PlaidInstitutionAccountWhereInput
  and: [PlaidInstitutionAccountWhereInput!]
  or: [PlaidInstitutionAccountWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """account_id field predicates"""
  accountID: String
  accountIDNEQ: String
  accountIDIn: [String!]
  accountIDNotIn: [String!]
  accountIDGT: String
  accountIDGTE: String
  accountIDLT: String
  accountIDLTE: String
  accountIDContains: String
  accountIDHasPrefix: String
  accountIDHasSuffix: String
  accountIDEqualFold: String
  accountIDContainsFold: String
  """balance_available field predicates"""
  balanceAvailable: Float
  balanceAvailableNEQ: Float
  balanceAvailableIn: [Float!]
  balanceAvailableNotIn: [Float!]
  balanceAvailableGT: Float
  balanceAvailableGTE: Float
  balanceAvailableLT: Float
  balanceAvailableLTE: Float
  """balance_current field predicates"""
  balanceCurrent: Float
  balanceCurrentNEQ: Float
  balanceCurrentIn: [Float!]
  balanceCurrentNotIn: [Float!]
  balanceCurrentGT: Float
  balanceCurrentGTE: Float
  balanceCurrentLT: Float
  balanceCurrentLTE: Float
  """balance_iso_currency_code field predicates"""
  balanceIsoCurrencyCode: String
  balanceIsoCurrencyCodeNEQ: String
  balanceIsoCurrencyCodeIn: [String!]
  balanceIsoCurrencyCodeNotIn: [String!]
  balanceIsoCurrencyCodeGT: String
  balanceIsoCurrencyCodeGTE: String
  balanceIsoCurrencyCodeLT: String
  balanceIsoCurrencyCodeLTE: String
  balanceIsoCurrencyCodeContains: String
  balanceIsoCurrencyCodeHasPrefix: String
  balanceIsoCurrencyCodeHasSuffix: String
  balanceIsoCurrencyCodeEqualFold: String
  balanceIsoCurrencyCodeContainsFold: String
  """mask field predicates"""
  mask: String
  maskNEQ: String
  maskIn: [String!]
  maskNotIn: [String!]
  maskGT: String
  maskGTE: String
  maskLT: String
  maskLTE: String
  maskContains: String
  maskHasPrefix: String
  maskHasSuffix: String
  maskEqualFold: String
  maskContainsFold: String
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """official_name field predicates"""
  officialName: String
  officialNameNEQ: String
  officialNameIn: [String!]
  officialNameNotIn: [String!]
  officialNameGT: String
  officialNameGTE: String
  officialNameLT: String
  officialNameLTE: String
  officialNameContains: String
  officialNameHasPrefix: String
  officialNameHasSuffix: String
  officialNameIsNil: Boolean
  officialNameNotNil: Boolean
  officialNameEqualFold: String
  officialNameContainsFold: String
  """type field predicates"""
  type: String
  typeNEQ: String
  typeIn: [String!]
  typeNotIn: [String!]
  typeGT: String
  typeGTE: String
  typeLT: String
  typeLTE: String
  typeContains: String
  typeHasPrefix: String
  typeHasSuffix: String
  typeEqualFold: String
  typeContainsFold: String
  """parent_institution edge predicates"""
  hasParentInstitution: Boolean
  hasParentInstitutionWith: [PlaidInstitutionWhereInput!]
  """transactions edge predicates"""
  hasTransactions: Boolean
  hasTransactionsWith: [TransactionWhereInput!]
}
"""A connection to a list of items."""
type PlaidInstitutionConnection {
  """A list of edges."""
  edges: [PlaidInstitutionEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type PlaidInstitutionEdge {
  """The item at the end of the edge."""
  node: PlaidInstitution
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""
PlaidInstitutionWhereInput is used for filtering PlaidInstitution objects.
Input was generated by ent.
"""
input PlaidInstitutionWhereInput {
  not: PlaidInstitutionWhereInput
  and: [PlaidInstitutionWhereInput!]
  or: [PlaidInstitutionWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """institution_id field predicates"""
  institutionID: String
  institutionIDNEQ: String
  institutionIDIn: [String!]
  institutionIDNotIn: [String!]
  institutionIDGT: String
  institutionIDGTE: String
  institutionIDLT: String
  institutionIDLTE: String
  institutionIDContains: String
  institutionIDHasPrefix: String
  institutionIDHasSuffix: String
  institutionIDEqualFold: String
  institutionIDContainsFold: String
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """plaid_item edge predicates"""
  hasPlaidItem: Boolean
  hasPlaidItemWith: [PlaidItemWhereInput!]
  """accounts edge predicates"""
  hasAccounts: Boolean
  hasAccountsWith: [PlaidInstitutionAccountWhereInput!]
}
type PlaidItem implements Node {
  id: ID!
  itemID: String!
  accessToken: String!
  createdAt: Time!
  updatedAt: Time!
  owner: User
  transactionSyncs: [TransactionSync!]
  institution: PlaidInstitution
}
"""A connection to a list of items."""
type PlaidItemConnection {
  """A list of edges."""
  edges: [PlaidItemEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type PlaidItemEdge {
  """The item at the end of the edge."""
  node: PlaidItem
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for PlaidItem connections"""
input PlaidItemOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order PlaidItems."""
  field: PlaidItemOrderField!
}
"""Properties by which PlaidItem connections can be ordered."""
enum PlaidItemOrderField {
  CREATED_AT
  UPDATED_AT
}
"""
PlaidItemWhereInput is used for filtering PlaidItem objects.
Input was generated by ent.
"""
input PlaidItemWhereInput {
  not: PlaidItemWhereInput
  and: [PlaidItemWhereInput!]
  or: [PlaidItemWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """item_id field predicates"""
  itemID: String
  itemIDNEQ: String
  itemIDIn: [String!]
  itemIDNotIn: [String!]
  itemIDGT: String
  itemIDGTE: String
  itemIDLT: String
  itemIDLTE: String
  itemIDContains: String
  itemIDHasPrefix: String
  itemIDHasSuffix: String
  itemIDEqualFold: String
  itemIDContainsFold: String
  """access_token field predicates"""
  accessToken: String
  accessTokenNEQ: String
  accessTokenIn: [String!]
  accessTokenNotIn: [String!]
  accessTokenGT: String
  accessTokenGTE: String
  accessTokenLT: String
  accessTokenLTE: String
  accessTokenContains: String
  accessTokenHasPrefix: String
  accessTokenHasSuffix: String
  accessTokenEqualFold: String
  accessTokenContainsFold: String
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """owner edge predicates"""
  hasOwner: Boolean
  hasOwnerWith: [UserWhereInput!]
  """transaction_syncs edge predicates"""
  hasTransactionSyncs: Boolean
  hasTransactionSyncsWith: [TransactionSyncWhereInput!]
  """institution edge predicates"""
  hasInstitution: Boolean
  hasInstitutionWith: [PlaidInstitutionWhereInput!]
}
type Query {
  """Fetches an object given its ID."""
  node(
    """ID of the object."""
    id: ID!
  ): Node
  """Lookup nodes by a list of IDs."""
  nodes(
    """The list of node IDs."""
    ids: [ID!]!
  ): [Node]!
}
type SpendingCategory implements Node {
  id: ID!
  name: String!
  categoryID: String!
  createdAt: Time!
  categoryTransactions: [Transaction!]
  interestedUsers: [User!]
}
"""A connection to a list of items."""
type SpendingCategoryConnection {
  """A list of edges."""
  edges: [SpendingCategoryEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type SpendingCategoryEdge {
  """The item at the end of the edge."""
  node: SpendingCategory
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""
SpendingCategoryWhereInput is used for filtering SpendingCategory objects.
Input was generated by ent.
"""
input SpendingCategoryWhereInput {
  not: SpendingCategoryWhereInput
  and: [SpendingCategoryWhereInput!]
  or: [SpendingCategoryWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """category_id field predicates"""
  categoryID: String
  categoryIDNEQ: String
  categoryIDIn: [String!]
  categoryIDNotIn: [String!]
  categoryIDGT: String
  categoryIDGTE: String
  categoryIDLT: String
  categoryIDLTE: String
  categoryIDContains: String
  categoryIDHasPrefix: String
  categoryIDHasSuffix: String
  categoryIDEqualFold: String
  categoryIDContainsFold: String
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """category_transactions edge predicates"""
  hasCategoryTransactions: Boolean
  hasCategoryTransactionsWith: [TransactionWhereInput!]
  """interested_users edge predicates"""
  hasInterestedUsers: Boolean
  hasInterestedUsersWith: [UserWhereInput!]
}
"""The builtin Time type"""
scalar Time
type Transaction implements Node {
  id: ID!
  financialAccountID: String!
  amount: Float!
  isoCurrencyCode: String!
  unofficialCurrencyCode: String!
  category: String
  categoryID: String
  checkNumber: String!
  date: String!
  datetime: Time
  authorizedDate: String
  authorizedDatetime: Time
  locationAddress: String!
  locationCity: String!
  locationRegion: String!
  locationPostalCode: String!
  locationLat: Float!
  locationLon: Float!
  locationStoreNumber: String!
  name: String!
  merchantName: String!
  paymentChannel: String!
  pending: Boolean!
  pendingTransactionID: String!
  accountOwner: String!
  transactionID: String!
  transactionCode: String!
  createdAt: Time!
  institutionAccount: PlaidInstitutionAccount
  transactionCategories: [SpendingCategory!]
}
"""A connection to a list of items."""
type TransactionConnection {
  """A list of edges."""
  edges: [TransactionEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type TransactionEdge {
  """The item at the end of the edge."""
  node: Transaction
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for Transaction connections"""
input TransactionOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Transactions."""
  field: TransactionOrderField!
}
"""Properties by which Transaction connections can be ordered."""
enum TransactionOrderField {
  DATE
  DATETIME
}
type TransactionSync implements Node {
  id: ID!
  createdAt: Time!
  cursor: String!
  item: PlaidItem
}
"""
TransactionSyncWhereInput is used for filtering TransactionSync objects.
Input was generated by ent.
"""
input TransactionSyncWhereInput {
  not: TransactionSyncWhereInput
  and: [TransactionSyncWhereInput!]
  or: [TransactionSyncWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """cursor field predicates"""
  cursor: String
  cursorNEQ: String
  cursorIn: [String!]
  cursorNotIn: [String!]
  cursorGT: String
  cursorGTE: String
  cursorLT: String
  cursorLTE: String
  cursorContains: String
  cursorHasPrefix: String
  cursorHasSuffix: String
  cursorEqualFold: String
  cursorContainsFold: String
  """item edge predicates"""
  hasItem: Boolean
  hasItemWith: [PlaidItemWhereInput!]
}
"""
TransactionWhereInput is used for filtering Transaction objects.
Input was generated by ent.
"""
input TransactionWhereInput {
  not: TransactionWhereInput
  and: [TransactionWhereInput!]
  or: [TransactionWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """financial_account_id field predicates"""
  financialAccountID: String
  financialAccountIDNEQ: String
  financialAccountIDIn: [String!]
  financialAccountIDNotIn: [String!]
  financialAccountIDGT: String
  financialAccountIDGTE: String
  financialAccountIDLT: String
  financialAccountIDLTE: String
  financialAccountIDContains: String
  financialAccountIDHasPrefix: String
  financialAccountIDHasSuffix: String
  financialAccountIDEqualFold: String
  financialAccountIDContainsFold: String
  """amount field predicates"""
  amount: Float
  amountNEQ: Float
  amountIn: [Float!]
  amountNotIn: [Float!]
  amountGT: Float
  amountGTE: Float
  amountLT: Float
  amountLTE: Float
  """iso_currency_code field predicates"""
  isoCurrencyCode: String
  isoCurrencyCodeNEQ: String
  isoCurrencyCodeIn: [String!]
  isoCurrencyCodeNotIn: [String!]
  isoCurrencyCodeGT: String
  isoCurrencyCodeGTE: String
  isoCurrencyCodeLT: String
  isoCurrencyCodeLTE: String
  isoCurrencyCodeContains: String
  isoCurrencyCodeHasPrefix: String
  isoCurrencyCodeHasSuffix: String
  isoCurrencyCodeEqualFold: String
  isoCurrencyCodeContainsFold: String
  """unofficial_currency_code field predicates"""
  unofficialCurrencyCode: String
  unofficialCurrencyCodeNEQ: String
  unofficialCurrencyCodeIn: [String!]
  unofficialCurrencyCodeNotIn: [String!]
  unofficialCurrencyCodeGT: String
  unofficialCurrencyCodeGTE: String
  unofficialCurrencyCodeLT: String
  unofficialCurrencyCodeLTE: String
  unofficialCurrencyCodeContains: String
  unofficialCurrencyCodeHasPrefix: String
  unofficialCurrencyCodeHasSuffix: String
  unofficialCurrencyCodeEqualFold: String
  unofficialCurrencyCodeContainsFold: String
  """category field predicates"""
  category: String
  categoryNEQ: String
  categoryIn: [String!]
  categoryNotIn: [String!]
  categoryGT: String
  categoryGTE: String
  categoryLT: String
  categoryLTE: String
  categoryContains: String
  categoryHasPrefix: String
  categoryHasSuffix: String
  categoryIsNil: Boolean
  categoryNotNil: Boolean
  categoryEqualFold: String
  categoryContainsFold: String
  """category_id field predicates"""
  categoryID: String
  categoryIDNEQ: String
  categoryIDIn: [String!]
  categoryIDNotIn: [String!]
  categoryIDGT: String
  categoryIDGTE: String
  categoryIDLT: String
  categoryIDLTE: String
  categoryIDContains: String
  categoryIDHasPrefix: String
  categoryIDHasSuffix: String
  categoryIDIsNil: Boolean
  categoryIDNotNil: Boolean
  categoryIDEqualFold: String
  categoryIDContainsFold: String
  """check_number field predicates"""
  checkNumber: String
  checkNumberNEQ: String
  checkNumberIn: [String!]
  checkNumberNotIn: [String!]
  checkNumberGT: String
  checkNumberGTE: String
  checkNumberLT: String
  checkNumberLTE: String
  checkNumberContains: String
  checkNumberHasPrefix: String
  checkNumberHasSuffix: String
  checkNumberEqualFold: String
  checkNumberContainsFold: String
  """date field predicates"""
  date: String
  dateNEQ: String
  dateIn: [String!]
  dateNotIn: [String!]
  dateGT: String
  dateGTE: String
  dateLT: String
  dateLTE: String
  dateContains: String
  dateHasPrefix: String
  dateHasSuffix: String
  dateEqualFold: String
  dateContainsFold: String
  """datetime field predicates"""
  datetime: Time
  datetimeNEQ: Time
  datetimeIn: [Time!]
  datetimeNotIn: [Time!]
  datetimeGT: Time
  datetimeGTE: Time
  datetimeLT: Time
  datetimeLTE: Time
  datetimeIsNil: Boolean
  datetimeNotNil: Boolean
  """authorized_date field predicates"""
  authorizedDate: String
  authorizedDateNEQ: String
  authorizedDateIn: [String!]
  authorizedDateNotIn: [String!]
  authorizedDateGT: String
  authorizedDateGTE: String
  authorizedDateLT: String
  authorizedDateLTE: String
  authorizedDateContains: String
  authorizedDateHasPrefix: String
  authorizedDateHasSuffix: String
  authorizedDateIsNil: Boolean
  authorizedDateNotNil: Boolean
  authorizedDateEqualFold: String
  authorizedDateContainsFold: String
  """authorized_datetime field predicates"""
  authorizedDatetime: Time
  authorizedDatetimeNEQ: Time
  authorizedDatetimeIn: [Time!]
  authorizedDatetimeNotIn: [Time!]
  authorizedDatetimeGT: Time
  authorizedDatetimeGTE: Time
  authorizedDatetimeLT: Time
  authorizedDatetimeLTE: Time
  authorizedDatetimeIsNil: Boolean
  authorizedDatetimeNotNil: Boolean
  """location_address field predicates"""
  locationAddress: String
  locationAddressNEQ: String
  locationAddressIn: [String!]
  locationAddressNotIn: [String!]
  locationAddressGT: String
  locationAddressGTE: String
  locationAddressLT: String
  locationAddressLTE: String
  locationAddressContains: String
  locationAddressHasPrefix: String
  locationAddressHasSuffix: String
  locationAddressEqualFold: String
  locationAddressContainsFold: String
  """location_city field predicates"""
  locationCity: String
  locationCityNEQ: String
  locationCityIn: [String!]
  locationCityNotIn: [String!]
  locationCityGT: String
  locationCityGTE: String
  locationCityLT: String
  locationCityLTE: String
  locationCityContains: String
  locationCityHasPrefix: String
  locationCityHasSuffix: String
  locationCityEqualFold: String
  locationCityContainsFold: String
  """location_region field predicates"""
  locationRegion: String
  locationRegionNEQ: String
  locationRegionIn: [String!]
  locationRegionNotIn: [String!]
  locationRegionGT: String
  locationRegionGTE: String
  locationRegionLT: String
  locationRegionLTE: String
  locationRegionContains: String
  locationRegionHasPrefix: String
  locationRegionHasSuffix: String
  locationRegionEqualFold: String
  locationRegionContainsFold: String
  """location_postal_code field predicates"""
  locationPostalCode: String
  locationPostalCodeNEQ: String
  locationPostalCodeIn: [String!]
  locationPostalCodeNotIn: [String!]
  locationPostalCodeGT: String
  locationPostalCodeGTE: String
  locationPostalCodeLT: String
  locationPostalCodeLTE: String
  locationPostalCodeContains: String
  locationPostalCodeHasPrefix: String
  locationPostalCodeHasSuffix: String
  locationPostalCodeEqualFold: String
  locationPostalCodeContainsFold: String
  """location_lat field predicates"""
  locationLat: Float
  locationLatNEQ: Float
  locationLatIn: [Float!]
  locationLatNotIn: [Float!]
  locationLatGT: Float
  locationLatGTE: Float
  locationLatLT: Float
  locationLatLTE: Float
  """location_lon field predicates"""
  locationLon: Float
  locationLonNEQ: Float
  locationLonIn: [Float!]
  locationLonNotIn: [Float!]
  locationLonGT: Float
  locationLonGTE: Float
  locationLonLT: Float
  locationLonLTE: Float
  """location_store_number field predicates"""
  locationStoreNumber: String
  locationStoreNumberNEQ: String
  locationStoreNumberIn: [String!]
  locationStoreNumberNotIn: [String!]
  locationStoreNumberGT: String
  locationStoreNumberGTE: String
  locationStoreNumberLT: String
  locationStoreNumberLTE: String
  locationStoreNumberContains: String
  locationStoreNumberHasPrefix: String
  locationStoreNumberHasSuffix: String
  locationStoreNumberEqualFold: String
  locationStoreNumberContainsFold: String
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """merchant_name field predicates"""
  merchantName: String
  merchantNameNEQ: String
  merchantNameIn: [String!]
  merchantNameNotIn: [String!]
  merchantNameGT: String
  merchantNameGTE: String
  merchantNameLT: String
  merchantNameLTE: String
  merchantNameContains: String
  merchantNameHasPrefix: String
  merchantNameHasSuffix: String
  merchantNameEqualFold: String
  merchantNameContainsFold: String
  """payment_channel field predicates"""
  paymentChannel: String
  paymentChannelNEQ: String
  paymentChannelIn: [String!]
  paymentChannelNotIn: [String!]
  paymentChannelGT: String
  paymentChannelGTE: String
  paymentChannelLT: String
  paymentChannelLTE: String
  paymentChannelContains: String
  paymentChannelHasPrefix: String
  paymentChannelHasSuffix: String
  paymentChannelEqualFold: String
  paymentChannelContainsFold: String
  """pending field predicates"""
  pending: Boolean
  pendingNEQ: Boolean
  """pending_transaction_id field predicates"""
  pendingTransactionID: String
  pendingTransactionIDNEQ: String
  pendingTransactionIDIn: [String!]
  pendingTransactionIDNotIn: [String!]
  pendingTransactionIDGT: String
  pendingTransactionIDGTE: String
  pendingTransactionIDLT: String
  pendingTransactionIDLTE: String
  pendingTransactionIDContains: String
  pendingTransactionIDHasPrefix: String
  pendingTransactionIDHasSuffix: String
  pendingTransactionIDEqualFold: String
  pendingTransactionIDContainsFold: String
  """account_owner field predicates"""
  accountOwner: String
  accountOwnerNEQ: String
  accountOwnerIn: [String!]
  accountOwnerNotIn: [String!]
  accountOwnerGT: String
  accountOwnerGTE: String
  accountOwnerLT: String
  accountOwnerLTE: String
  accountOwnerContains: String
  accountOwnerHasPrefix: String
  accountOwnerHasSuffix: String
  accountOwnerEqualFold: String
  accountOwnerContainsFold: String
  """transaction_id field predicates"""
  transactionID: String
  transactionIDNEQ: String
  transactionIDIn: [String!]
  transactionIDNotIn: [String!]
  transactionIDGT: String
  transactionIDGTE: String
  transactionIDLT: String
  transactionIDLTE: String
  transactionIDContains: String
  transactionIDHasPrefix: String
  transactionIDHasSuffix: String
  transactionIDEqualFold: String
  transactionIDContainsFold: String
  """transaction_code field predicates"""
  transactionCode: String
  transactionCodeNEQ: String
  transactionCodeIn: [String!]
  transactionCodeNotIn: [String!]
  transactionCodeGT: String
  transactionCodeGTE: String
  transactionCodeLT: String
  transactionCodeLTE: String
  transactionCodeContains: String
  transactionCodeHasPrefix: String
  transactionCodeHasSuffix: String
  transactionCodeEqualFold: String
  transactionCodeContainsFold: String
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """institution_account edge predicates"""
  hasInstitutionAccount: Boolean
  hasInstitutionAccountWith: [PlaidInstitutionAccountWhereInput!]
  """transaction_categories edge predicates"""
  hasTransactionCategories: Boolean
  hasTransactionCategoriesWith: [SpendingCategoryWhereInput!]
}
"""
UpdateUserInput is used for update User object.
Input was generated by ent.
"""
input UpdateUserInput {
  offerFrequency: UserOfferFrequency
  homeCountry: String
  clearHomeCountry: Boolean
  homeState: String
  clearHomeState: Boolean
  homeCity: String
  clearHomeCity: Boolean
}
"""
UpdateUserNotificationChannelPreferencesInput is used for update UserNotificationChannelPreferences object.
Input was generated by ent.
"""
input UpdateUserNotificationChannelPreferencesInput {
  chanel: UserNotificationChannelPreferencesChanel
}
type User implements Node {
  id: ID!
  identityProviderID: String
  offerFrequency: UserOfferFrequency!
  homeCountry: String
  homeState: String
  homeCity: String
  plaidItems: [PlaidItem!]
  spendingCategories: [SpendingCategory!]
  notificationChannels: [UserNotificationChannelPreferences!]
  notifications: [Notification!]
  availableDiscountOffers: [DiscountOffer!]
}
type UserNotificationChannelPreferences implements Node {
  id: ID!
  chanel: UserNotificationChannelPreferencesChanel!
  chanelUsers: User
}
"""UserNotificationChannelPreferencesChanel is enum for the field chanel"""
enum UserNotificationChannelPreferencesChanel @goModel(model: "wallit/ent/usernotificationchannelpreferences.Chanel") {
  EMAIL
  SMS
  PUSH
}
"""A connection to a list of items."""
type UserNotificationChannelPreferencesConnection {
  """A list of edges."""
  edges: [UserNotificationChannelPreferencesEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type UserNotificationChannelPreferencesEdge {
  """The item at the end of the edge."""
  node: UserNotificationChannelPreferences
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""
UserNotificationChannelPreferencesWhereInput is used for filtering UserNotificationChannelPreferences objects.
Input was generated by ent.
"""
input UserNotificationChannelPreferencesWhereInput {
  not: UserNotificationChannelPreferencesWhereInput
  and: [UserNotificationChannelPreferencesWhereInput!]
  or: [UserNotificationChannelPreferencesWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """chanel field predicates"""
  chanel: UserNotificationChannelPreferencesChanel
  chanelNEQ: UserNotificationChannelPreferencesChanel
  chanelIn: [UserNotificationChannelPreferencesChanel!]
  chanelNotIn: [UserNotificationChannelPreferencesChanel!]
  """chanel_users edge predicates"""
  hasChanelUsers: Boolean
  hasChanelUsersWith: [UserWhereInput!]
}
"""UserOfferFrequency is enum for the field offer_frequency"""
enum UserOfferFrequency @goModel(model: "wallit/ent/user.OfferFrequency") {
  NO_OFFERS
  ASS_SOON_AS_POSSIBLE
  DAILY
  WEEKLY
  BI_WEEKLY
  MONTHLY
}
"""
UserWhereInput is used for filtering User objects.
Input was generated by ent.
"""
input UserWhereInput {
  not: UserWhereInput
  and: [UserWhereInput!]
  or: [UserWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """identity_provider_id field predicates"""
  identityProviderID: String
  identityProviderIDNEQ: String
  identityProviderIDIn: [String!]
  identityProviderIDNotIn: [String!]
  identityProviderIDGT: String
  identityProviderIDGTE: String
  identityProviderIDLT: String
  identityProviderIDLTE: String
  identityProviderIDContains: String
  identityProviderIDHasPrefix: String
  identityProviderIDHasSuffix: String
  identityProviderIDIsNil: Boolean
  identityProviderIDNotNil: Boolean
  identityProviderIDEqualFold: String
  identityProviderIDContainsFold: String
  """offer_frequency field predicates"""
  offerFrequency: UserOfferFrequency
  offerFrequencyNEQ: UserOfferFrequency
  offerFrequencyIn: [UserOfferFrequency!]
  offerFrequencyNotIn: [UserOfferFrequency!]
  """home_country field predicates"""
  homeCountry: String
  homeCountryNEQ: String
  homeCountryIn: [String!]
  homeCountryNotIn: [String!]
  homeCountryGT: String
  homeCountryGTE: String
  homeCountryLT: String
  homeCountryLTE: String
  homeCountryContains: String
  homeCountryHasPrefix: String
  homeCountryHasSuffix: String
  homeCountryIsNil: Boolean
  homeCountryNotNil: Boolean
  homeCountryEqualFold: String
  homeCountryContainsFold: String
  """home_state field predicates"""
  homeState: String
  homeStateNEQ: String
  homeStateIn: [String!]
  homeStateNotIn: [String!]
  homeStateGT: String
  homeStateGTE: String
  homeStateLT: String
  homeStateLTE: String
  homeStateContains: String
  homeStateHasPrefix: String
  homeStateHasSuffix: String
  homeStateIsNil: Boolean
  homeStateNotNil: Boolean
  homeStateEqualFold: String
  homeStateContainsFold: String
  """home_city field predicates"""
  homeCity: String
  homeCityNEQ: String
  homeCityIn: [String!]
  homeCityNotIn: [String!]
  homeCityGT: String
  homeCityGTE: String
  homeCityLT: String
  homeCityLTE: String
  homeCityContains: String
  homeCityHasPrefix: String
  homeCityHasSuffix: String
  homeCityIsNil: Boolean
  homeCityNotNil: Boolean
  homeCityEqualFold: String
  homeCityContainsFold: String
  """plaid_items edge predicates"""
  hasPlaidItems: Boolean
  hasPlaidItemsWith: [PlaidItemWhereInput!]
  """spending_categories edge predicates"""
  hasSpendingCategories: Boolean
  hasSpendingCategoriesWith: [SpendingCategoryWhereInput!]
  """notification_channels edge predicates"""
  hasNotificationChannels: Boolean
  hasNotificationChannelsWith: [UserNotificationChannelPreferencesWhereInput!]
  """notifications edge predicates"""
  hasNotifications: Boolean
  hasNotificationsWith: [NotificationWhereInput!]
  """available_discount_offers edge predicates"""
  hasAvailableDiscountOffers: Boolean
  hasAvailableDiscountOffersWith: [DiscountOfferWhereInput!]
}
